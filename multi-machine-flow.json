[
    {
        "id": "flow-1",
        "type": "tab",
        "label": "Multi-Machine OEE",
        "disabled": false,
        "info": ""
    },
    {
        "id": "machine-config",
        "type": "inject",
        "z": "flow-1",
        "name": "Load Machine Config",
        "props": [{"p":"payload"},{"p":"topic","vt":"str"}],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 200,
        "y": 200,
        "wires": [["set-machine-config"]]
    },
    {
        "id": "set-machine-config",
        "type": "function",
        "z": "flow-1",
        "name": "Set Machine Config",
        "func": "// Load machine config from localStorage or database\nconst machines = {\n    \"m1\": {\n        \"id\": \"m1\",\n        \"name\": \"Injection Molder 1\",\n        \"product\": \"Plastic Housing\",\n        \"cycleTime\": 45,\n        \"topics\": {\n            \"oee\": \"oee/injection-molder-1/results\",\n            \"raw\": \"oee/injection-molder-1/raw\"\n        }\n    },\n    \"m2\": {\n        \"id\": \"m2\",\n        \"name\": \"CNC Machine 1\",\n        \"product\": \"Metal Bracket\",\n        \"cycleTime\": 120,\n        \"topics\": {\n            \"oee\": \"oee/cnc-machine-1/results\",\n            \"raw\": \"oee/cnc-machine-1/raw\"\n        }\n    }\n};\n\nglobal.set('machines', machines);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 200,
        "wires": [[]]
    },
    {
        "id": "machine-1-input",
        "type": "inject",
        "z": "flow-1",
        "name": "Injection Molder Data",
        "props": [{"p":"payload"},{"p":"topic","vt":"str"}],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "machine/m1/data",
        "payload": "{\"runTime\":420,\"idealOutput\":500,\"totalProducts\":450,\"goodProducts\":430}",
        "payloadType": "json",
        "x": 200,
        "y": 100,
        "wires": [["oee-calculator", "raw-data-publisher"]]
    },
    {
        "id": "machine-2-input",
        "type": "inject",
        "z": "flow-1",
        "name": "CNC Machine Data",
        "props": [{"p":"payload"},{"p":"topic","vt":"str"}],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "machine/m2/data",
        "payload": "{\"runTime\":380,\"idealOutput\":300,\"totalProducts\":280,\"goodProducts\":270}",
        "payloadType": "json",
        "x": 200,
        "y": 300,
        "wires": [["oee-calculator", "raw-data-publisher"]]
    },
    {
        "id": "oee-calculator",
        "type": "function",
        "z": "flow-1",
        "name": "Calculate OEE",
        "func": "const machineId = msg.topic.split('/')[1];\nconst machines = global.get('machines') || {};\nconst config = machines[machineId];\n\nif (!config) {\n    node.error('Machine config not found', msg);\n    return null;\n}\n\n// Calculate OEE\nconst availability = (msg.payload.runTime / 480) * 100;\nconst performance = (msg.payload.totalProducts / msg.payload.idealOutput) * 100;\nconst quality = (msg.payload.goodProducts / msg.payload.totalProducts) * 100;\nconst oee = (availability * performance * quality) / 10000;\n\n// Prepare result\nmsg.payload = {\n    ...config,\n    availability: availability.toFixed(2),\n    performance: performance.toFixed(2),\n    quality: quality.toFixed(2),\n    oee: oee.toFixed(2),\n    timestamp: new Date().toISOString()\n};\n\nmsg.topic = config.topics.oee;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 100,
        "wires": [["oee-publisher"]]
    },
    {
        "id": "raw-data-publisher",
        "type": "mqtt out",
        "z": "flow-1",
        "name": "Publish Raw Data",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "broker": "mqtt-broker",
        "x": 500,
        "y": 180,
        "wires": []
    },
    {
        "id": "oee-publisher",
        "type": "mqtt out",
        "z": "flow-1",
        "name": "Publish OEE Results",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "broker": "mqtt-broker",
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "mqtt-broker",
        "type": "mqtt-broker",
        "name": "Local MQTT Broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]